{"version":3,"sources":["components/blocks/Figure/Figure.js","components/blocks/Link/Link.js","components/blocks/Text/Text.js","components/blocks/Title/Title.js","components/blocks/Svg/Svg.js","components/blocks/Nav/Nav.js","components/containers/Header/Header.js","utils/helpers/color/hexToHSL.js","utils/helpers/color/ContrastRatio.js","utils/helpers/data/getRandom.js","utils/helpers/data/gridTemplate.js","store/index.js","components/containers/Section/Section.js","components/containers/Main/Main.js","pages/Home/Home.js","App.js","utils/helpers/default/reportWebVitals.js","index.js"],"names":["Figure","React","forwardRef","props","ref","imageInfo","className","id","src","url","alt","description","href","creditUrl","credit","displayName","Link","link","target","rel","content","Text","style","color","accent","text","Title","path","Svg","shape","x","y","width","height","fill","fillColor","points","cx","cy","r","d","transform","viewBox","Nav","map","idx","Header","timelineSquare","gsap","timeline","paused","timelineCircle","timelineParallelogram","repeat","timelineTriangle","timelineBlob","window","addEventListener","fromTo","rotation","duration","delay","yoyo","yoyoEase","ease","to","skewX","hexToHSL","hex","result","exec","parseInt","g","b","h","max","Math","min","round","ContrastRatio","hex1","hex2","this","_contrast","rgb1","_helperHexToRgb","rgb2","lum1","_helperLuminance","lum2","ratio","hexArray","split","shift","hexValue","join","bigint","a","v","pow","getRandom","arr","n","Array","len","length","taken","RangeError","floor","random","GridRandomTemplate","elementsToDisplay","gridTemplateAreas","rowsNum","columnsNum","gridCoord","coordinates","areas","gridAreas","areasCollection","gridArrayTemplate","_generateCoordTemplate","_generateElementsData","_generateGridAreas","_generateAreasCollection","_setValuesInTemplate","_generateGridTemplateAreas","i","j","push","value","coord","flat","rowLength","columnLength","rand","findIndex","JSON","stringify","_helperGetRandomCoord","splice","forEach","el","rows","columns","area","row","idxRow","block","columnGrid","rowGrid","scheme","require","Img","randImg","data","imageColor","imageHue","from_hue","variation","colorsArray","colors","img","clr","clrArr","Section","imgData","_setValues","imageData","_getValues","sectionRef","useRef","urls","regular","urlRegular","user","name","links","html","colorScheme","bgColor","txtColor","accent1","accent2","accent3","template","setValues","property","current","useEffect","firstContrast","secondContrast","element","setProperty","pages","Main","useState","display","setDisplay","keyRef","document","documentElement","scrollTop","scrollHeight","clientHeight","section","Home","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.80819470.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Figure = React.forwardRef ((props, ref) => {\r\n    const imageInfo = props.imageInfo;\r\n\r\n    return (\r\n        <figure ref={ref} className={`figure ${props.className}`}>\r\n            <img\r\n                id={props.id}\r\n                src={imageInfo.url}\r\n                alt={imageInfo.description}\r\n                className={\"img\"}\r\n            />\r\n            <figcaption>Img by <a href={imageInfo.creditUrl}>{imageInfo.credit}</a> on Unsplash</figcaption>\r\n        </figure>\r\n    )\r\n});\r\n\r\nFigure.displayName = Figure;\r\n\r\nexport default Figure","const Link = (props) => {\r\n    return (\r\n        <a className={\"link\"} id={props.id} href={props.link} target=\"_blank\" rel=\"noreferrer\">{props.content}</a>\r\n    )\r\n}\r\n\r\nexport default Link;","const Text = (props) => {\r\n    return (\r\n        <p className={'text'} id={props.id} style={{color: props.accent}}>\r\n            {props.text}\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default Text;","import React from 'react';\r\n\r\nconst Title = React.forwardRef((props, ref) => {\r\n    return (\r\n        <h1\r\n            ref={ref}\r\n            id={props.id}\r\n            className={'title ' + props.className}\r\n            style={{color: props.color}}\r\n        >\r\n            {props.content}\r\n        </h1>\r\n    )\r\n})\r\n\r\nexport default Title;","let path = \"\";\r\nlet className = \"svg \";\r\n\r\nconst Svg = (props) => {\r\n    switch (props.shape){\r\n        case \"square\":\r\n            path = <rect x={\"0\"} y={\"0\"} width={\"2000\"} height={\"200\"} style={{fill: props.fillColor}} />;\r\n            break;\r\n        case \"triangle\":\r\n            path = <polygon points=\"100,0 200,150 25,200\" style={{fill: props.fillColor}} />;\r\n            break;\r\n        case \"circle\":\r\n            path = <circle cx=\"100\" cy=\"100\" r=\"100\" style={{fill: props.fillColor}}/>;\r\n            break;\r\n        case \"parallelogram\":\r\n            path = <polygon points=\"75,0 200,0 125,200 0,200\" style={{fill: props.fillColor}}/>;\r\n            break;\r\n        case \"blob\":\r\n            path = <path style={{fill: props.fillColor}} d=\"M56.9,-11.1C66.2,10.1,60.9,43.3,41.9,57.1C22.8,70.8,-10.1,64.9,-31.6,48.2C-53.2,31.4,-63.5,3.7,-56.3,-14.6C-49.2,-32.9,-24.6,-41.8,-0.4,-41.6C23.8,-41.5,47.6,-32.4,56.9,-11.1Z\" transform=\"translate(100 100)\" />\r\n            className = \"\";\r\n            break;\r\n        default: break;\r\n    }\r\n    return (\r\n        <svg className={`${className + props.className}`} id={props.id} width={\"200\"} height={\"200\"} viewBox={\"0 0 200 200\"}>\r\n            {path}\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Svg;\r\n\r\n\r\n/*\r\n\r\n<!--\r\n            component svg props.className => class=\"\" props.fill => fill = \"\" props.shape => d=\"\"\r\n            fill = props\r\n            dimensions = ['triangle' => \"Mx,y,x,y,x,yZ\", 'square' => \"Mx,y,x,y,x,y,x,yZ\", 'paralellogram' => \"Mx,y,x,y,x,y,x,yZ\", 'circle' =>]\r\n            -->\r\n\r\n */\r\n\r\n","import { Link } from '../';\r\n\r\nconst Nav = () => {\r\n    const links = [\r\n        {\r\n            id: \"repo\",\r\n            url: \"https://github.com/Leweyse/infinite\",\r\n            content: \"Github\"\r\n        },\r\n        {\r\n            id: \"blog\",\r\n            url: \"https://github.com/Leweyse/infinite/blob/main/DEVDAIRY.md\",\r\n            content: \"Blog\"\r\n        },\r\n        {\r\n            id: \"src\",\r\n            url: \"https://github.com/Leweyse/infinite/blob/main/README.md\",\r\n            content: \"Sources\"\r\n        },\r\n        {\r\n            id: \"extra\",\r\n            url: \"https://github.com/Leweyse/infinite/blob/main/DEVBOOK.md\",\r\n            content: \"Extras\"\r\n        },\r\n    ]\r\n\r\n    return(\r\n        <nav>\r\n            { links.map((link, idx) => \r\n                <Link\r\n                    key={idx}\r\n                    id={link.id} \r\n                    link={link.url} \r\n                    content={link.content}\r\n                />\r\n            )}\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;","import { gsap } from \"gsap\";\r\n\r\nimport { Nav, Title, Text, Svg } from '../../blocks';\r\n\r\nconst Header = () => {\r\n    let timelineSquare = gsap.timeline({paused: false});\r\n    let timelineCircle = gsap.timeline({paused: false});\r\n    let timelineParallelogram = gsap.timeline({paused:false, repeat: -1});\r\n    let timelineTriangle = gsap.timeline({paused: false, repeat: -1});\r\n    let timelineBlob = gsap.timeline({paused: false, repeat: -1})\r\n\r\n    window.addEventListener(\"load\", () => {\r\n        timelineSquare.fromTo('#square', {rotation: 10, y: -50}, {rotation: -5, y: 10, duration: 4, delay: 0.5, yoyo: true, yoyoEase: \"in\", repeat: -1});\r\n        timelineCircle.fromTo('#circle', {y: -20}, {y: 50, duration: 3, delay: 0.5, yoyo: true, yoyoEase: \"slow(0.7, 0.7, false)\", repeat: -1});\r\n        timelineParallelogram\r\n            .fromTo(\"#parallelogram\", {rotation: 0, y: -20}, {duration: 3.5, rotation: 10, ease: \"in\"})\r\n            .to('#parallelogram', {y: 10, rotation: -5, duration: 3, ease: \"in\"})\r\n            .fromTo(\"#parallelogram\", {y: 10, rotation: -5}, {duration: 3.5, rotation: 10, y: -20, ease: \"in\"})\r\n            .to('#parallelogram', {rotation: 0, duration: 3, ease: \"in\"});\r\n        timelineTriangle\r\n            .fromTo(\"#triangle\", {rotation: 0, y: 0}, {delay: 0.5, duration: 3, rotation: -15, y: 10, ease: \"in\"})\r\n            .to('#triangle', {duration: 2, rotation: 0, y: 0, ease: \"in\"})\r\n            .fromTo(\"#triangle\", {rotation: 0, y: 0}, {delay: 0.5, duration: 1.5, rotation: -15, y: 80, ease: \"out\"})\r\n            .to('#triangle', {duration: 2, delay: 1, rotation: 0, y: 0, ease: \"out\"});\r\n        timelineBlob\r\n            .fromTo(\"#blob\", {y: 300, rotation: 180, skewX: 0}, {y: -300, duration: 4, rotation: 0, skewX: 20, ease: \"bounce.out\"})\r\n            .fromTo(\"#blob\", {y: -300, rotation: 0, skewX: 20}, {y: 300, skewX: 0, delay: 4, rotation: 180, duration: 4, ease: \"bounce.out\"})\r\n    })\r\n\r\n    return(\r\n        <header>\r\n            <Nav />\r\n            <Svg shape={'square'} className={'svgAbsolute svgBackground svgMedium'} fillColor={'#387780'} id={'square'} />\r\n            <Svg shape={'triangle'} className={'svgAbsolute svgBackground svgMedium'} fillColor={'#DB93B0'} id={'triangle'} />\r\n            <Svg shape={'parallelogram'} className={'svgAbsolute svgBackground svgMedium'} fillColor={'#678D58'} id={'parallelogram'} />\r\n            <Svg shape={'circle'} className={'svgAbsolute svgBackground svgMedium'} fillColor={'#F18805'} id={'circle'} />\r\n            <Svg shape={'blob'} className={'svgAbsolute svgBackground svgMedium'} fillColor={'#D90429'} id={'blob'} />\r\n            <Title id={\"header_title\"} content={\"Welcome to Infinite\"} />\r\n            <Text id={\"header_text\"} text={\"Scroll down and explore\"} />\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Header;\r\n\r\n","function hexToHSL(hex) {\r\n\r\n    let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    let r = parseInt(result[1], 16);\r\n    let g = parseInt(result[2], 16);\r\n    let b = parseInt(result[3], 16);\r\n\r\n    r /= 255; g /= 255; b /= 255;\r\n\r\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n\r\n    let h, l = (max + min) / 2;\r\n\r\n    if (max === min) h = 0; // achromatic\r\n    else {\r\n        let d = max - min;\r\n\r\n        h = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n\r\n        switch (max) {\r\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n            case g: h = (b - r) / d + 2; break;\r\n            case b: h = (r - g) / d + 4; break;\r\n            default: break;\r\n        }\r\n\r\n        h /= 6;\r\n    }\r\n\r\n    return Math.round(240*h);\r\n}\r\n\r\nexport default hexToHSL;","class ContrastRatio {\r\n    ratio;\r\n\r\n    constructor(hex1, hex2) {\r\n        this._contrast(hex1, hex2);\r\n    }\r\n\r\n    _contrast(hex1, hex2) {\r\n        let rgb1 = this._helperHexToRgb(hex1);\r\n        let rgb2 = this._helperHexToRgb(hex2);\r\n    \r\n        let lum1 = this._helperLuminance(rgb1[0], rgb1[1], rgb1[2]) + 0.05;\r\n        let lum2 = this._helperLuminance(rgb2[0], rgb2[1], rgb2[2]) + 0.05;\r\n\r\n        let brightest = Math.max(lum1, lum2);\r\n        let darkest = Math.min(lum1, lum2);\r\n    \r\n        let result = (brightest) / (darkest)\r\n    \r\n        if (result < 1) result = 1 / result;\r\n    \r\n        this.ratio = result;\r\n    }\r\n\r\n    _helperHexToRgb(hex) {\r\n        let hexArray = hex.split('');\r\n        hexArray.shift();\r\n    \r\n        let hexValue = hexArray.join('');\r\n    \r\n        let bigint = parseInt(hexValue, 16);\r\n        let r = (bigint >> 16) & 255;\r\n        let g = (bigint >> 8) & 255;\r\n        let b = bigint & 255;\r\n    \r\n        return [r, g, b];\r\n    }\r\n    \r\n    _helperLuminance(r, g, b) {\r\n        let a = [r, g, b].map(v => {\r\n            v /= 255;\r\n            return (\r\n                v <= 0.03928 ? \r\n                v / 12.92 : \r\n                Math.pow( (v + 0.055) / 1.055, 2.4 )\r\n            );\r\n        });\r\n\r\n        return a[0] * 0.2126 + a[1] * 0.7152 + a[2] * 0.0722;\r\n    }\r\n}\r\n\r\nexport default ContrastRatio;","// https://stackoverflow.com/a/19270021/14358560\r\n\r\nfunction getRandom(arr, n) {\r\n    var result = new Array(n),\r\n        len = arr.length,\r\n        taken = new Array(len);\r\n    if (n > len)\r\n        throw new RangeError(\"getRandom: more elements taken than available\");\r\n    while (n--) {\r\n        var x = Math.floor(Math.random() * len);\r\n        result[n] = arr[x in taken ? taken[x] : x];\r\n        taken[x] = --len in taken ? taken[len] : len;\r\n    }\r\n    return result;\r\n}\r\n\r\nexport default getRandom;","import getRandom from './getRandom';\r\n\r\nclass GridRandomTemplate {\r\n    // Final result is a string\r\n    gridTemplateAreas = \"\";\r\n\r\n    constructor(elementsToDisplay = []) {\r\n        this.elementsToDisplay = elementsToDisplay;\r\n        // Define constants\r\n        this.rowsNum = 9;\r\n        this.columnsNum = 14;\r\n\r\n        // Array of coordinates\r\n        this.gridCoord = []; // Coordinates are the position of each area: [x, y]\r\n        // Collection of all coordinates\r\n        this.coordinates = [];\r\n\r\n        // \"areas\" contains basic information of each grid-area\r\n        this.areas = []; // {value: grid-name, x: x-coord, y: y-coord, rows: horizontal-length, columns: vertical-length}\r\n\r\n        // Collection of objects for each \"area\": {value: name, coord: []}\r\n        // gridAreas: name and ALL coordinates\r\n        this.gridAreas = []; // [{value: name1, coord: [[0, 1], [0, 2], ...]}, {value: name2, coord: [[1, 1], [1, 2], ...]}, ...]\r\n        // areasCollection: name and ONE coord\r\n        this.areasCollection = []; // [{value: name1, coord: [0, 1]}, {value: name1, coord: [0, 2]}, ...]\r\n\r\n        // Array version of template\r\n        this.gridArrayTemplate = [];\r\n\r\n        // Generate layout for coordinates\r\n        this._generateCoordTemplate();\r\n        // Provide random coordinates for Elements\r\n        this._generateElementsData();\r\n        // Create collection of areas with their coordinates\r\n        this._generateGridAreas();\r\n        // Generate collection of each coordinate with a value different from \".\"\r\n        this._generateAreasCollection();\r\n        // Set areas' value in template based on their coordinates\r\n        this._setValuesInTemplate();\r\n        // Generate string - grid-template-areas\r\n        this._generateGridTemplateAreas();\r\n    }\r\n\r\n    _generateCoordTemplate() {\r\n        // Loop to set values on gridCoord array: format -> [row, row] -> row = [column, column]\r\n        for (let i = 0; i < this.rowsNum; i++) {\r\n            // Each row will be represented as an array\r\n            this.gridCoord[i] = [];\r\n\r\n            for (let j = 0; j < this.columnsNum; j++) {\r\n                this.gridCoord[i].push({\r\n                    // value is the grid-name\r\n                    value: \".\",\r\n                    // coord is the position of each area: format -> [0, 0]\r\n                    coord: [j, i]\r\n                });\r\n            }\r\n        }\r\n\r\n        // Copy gridCoord as one array of objects: format -> [{value: ..., coord: ...}, ...]\r\n        this.coordinates = [...this.gridCoord].flat();\r\n    }\r\n\r\n    // Helper to get random coordinates, and remove them when they're not available\r\n    _helperGetRandomCoord(rowLength, columnLength) {\r\n        // Get random coordinate\r\n        let rand = getRandom(this.coordinates, 1);\r\n\r\n        if (\r\n            // Avoid conflict with Navbar position\r\n            rand[0].coord[0] >= 2 && // Position from left\r\n            rand[0].coord[0] <= ((this.columnsNum - columnLength) - 2) && // Position from right\r\n            rand[0].coord[1] >= 2 && // Position from top\r\n            rand[0].coord[1] <= ((this.rowsNum - rowLength) - 2) // Position from bottom\r\n        ) {\r\n            // Loop to remove coordinates not available\r\n            for (let i = 0; i < rowLength; i++) {\r\n                for (let j = 0; j < columnLength; j++) {\r\n                    // Get index from object\r\n                    const idx =\r\n                        this.coordinates.findIndex(gridCoord =>\r\n                            JSON.stringify(gridCoord.coord) === JSON.stringify([rand[0].coord[0] + j, rand[0].coord[1] + i])\r\n                        );\r\n\r\n                    // Remove object from available coordinates\r\n                    if (idx > -1) this.coordinates.splice(idx, 1);\r\n                    else return this._helperGetRandomCoord(rowLength, columnLength);\r\n                }\r\n            }\r\n\r\n            return rand[0].coord;\r\n        }\r\n\r\n        // Recursion used to find an available coordinate\r\n        return this._helperGetRandomCoord(rowLength, columnLength);\r\n    }\r\n\r\n    _generateElementsData() {\r\n        this.elementsToDisplay.forEach(el => {\r\n            const coord = this._helperGetRandomCoord(el.rows, el.columns);\r\n\r\n            this.areas.push({\r\n                value: el.value,\r\n                x: coord[0],\r\n                y: coord[1],\r\n                rows: el.rows,\r\n                columns: el.columns\r\n            });\r\n        })\r\n    }\r\n\r\n    // Set values in coordinates\r\n    _generateGridAreas() {\r\n        this.areas.forEach((area, idx) => {\r\n            this.gridAreas[idx] = {};\r\n            this.gridAreas[idx].value = area.value;\r\n            this.gridAreas[idx].coord = [];\r\n\r\n            for (let i = 0; i < area.rows; i++) {\r\n                for (let j = 0; j < area.columns; j++) {\r\n                    this.gridAreas[idx].coord.push([area.x + j, area.y + i]);\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    _generateAreasCollection() {\r\n        this.gridAreas.forEach(area => {\r\n            area.coord.forEach(coord => {\r\n                this.areasCollection.push({\r\n                    value: area.value,\r\n                    coord: coord\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    // Set values in gridArrayTemplate\r\n    // Each coordinate has a grid-name\r\n    _setValuesInTemplate() {\r\n        // Compare areasCollection with each coordinate on gridCoord\r\n        this.gridCoord.forEach((row, idxRow) => {\r\n            this.gridArrayTemplate[idxRow] = [];\r\n\r\n            row.forEach(area => {\r\n                this.areasCollection.forEach(block => {\r\n                    if (JSON.stringify(area.coord) === JSON.stringify(block.coord)) {\r\n                        area.value = block.value;\r\n                    }\r\n                })\r\n\r\n                this.gridArrayTemplate[idxRow].push(area.value);\r\n            })\r\n        })\r\n    }\r\n\r\n    // Convert ArrayTemplate to String\r\n    _generateGridTemplateAreas() {\r\n        let columnGrid = \"\";\r\n        let rowGrid = \"\";\r\n\r\n        for (let i = 0; i < this.gridArrayTemplate.length; i++) {\r\n            columnGrid = this.gridArrayTemplate[i].join(' ');\r\n            rowGrid = `\"${columnGrid}\"`;\r\n            this.gridTemplateAreas += `${rowGrid}\\n`;\r\n        }\r\n    }\r\n}\r\n\r\nexport default GridRandomTemplate;","import { hexToHSL } from \"../utils\";\r\nimport data from \"./data/images.json\";\r\n\r\nconst ColorScheme = require('color-scheme');\r\nconst scheme = new ColorScheme();\r\n\r\nclass Img {\r\n    _setValues(rand) {\r\n        this.randImg = data[Math.floor(rand * data.length)];\r\n        this.imageColor = this.randImg.color;\r\n        this.imageHue = hexToHSL(this.imageColor);\r\n\r\n        scheme.from_hue(this.imageHue)\r\n            .scheme('mono')\r\n            .variation('light');\r\n\r\n        this.colorsArray = scheme.colors();\r\n    }\r\n\r\n    _getValues() {\r\n        return {\r\n            img: this.randImg, \r\n            clr: this.imageColor, \r\n            clrArr: this.colorsArray\r\n        }\r\n    }\r\n}\r\n\r\nexport { Img };","import { useEffect, useRef } from \"react\";\r\n\r\nimport { GridRandomTemplate, ContrastRatio } from \"../../../utils\";\r\nimport { Img } from \"../../../store\";\r\n\r\nimport { Title, Figure, Nav } from \"../../blocks\";\r\n\r\nexport default function Section() {\r\n    // IMG data\r\n    const imgData = new Img();\r\n    imgData._setValues(Math.random());\r\n    \r\n    // Variables related to IMG data\r\n    const imageData = imgData._getValues();\r\n    const randImg = imageData.img;\r\n    const imageColor = imageData.clr;\r\n    const colorsArray = imageData.clrArr;\r\n\r\n    // To reference elements\r\n    const sectionRef = useRef(null);\r\n\r\n    // Using references to avoid warnings\r\n    // related with useEffect dependencies\r\n    const imageInfo = useRef({\r\n        url: randImg.urls.regular,\r\n        urlRegular: randImg.urls.regular,\r\n        description: randImg.description,\r\n        credit: randImg.user.name,\r\n        creditUrl: randImg.links.html\r\n    });\r\n\r\n    const colorScheme = useRef({\r\n        bgColor: imageColor,\r\n        txtColor: \"#\" + colorsArray[2],\r\n        accent1: \"#\" + colorsArray[0],\r\n        accent2: \"#\" + colorsArray[1],\r\n        accent3: \"#\" + colorsArray[3]\r\n    });\r\n\r\n    const elementsToDisplay = [\r\n        {\r\n            value: \"img\",\r\n            rows: 3,\r\n            columns: 3\r\n        },\r\n        {\r\n            value: \"txt1\",\r\n            rows: 1,\r\n            columns: 3\r\n        },\r\n        {\r\n            value: \"txt2\",\r\n            rows: 1,\r\n            columns: 3\r\n        },\r\n        {\r\n            value: \"txt3\",\r\n            rows: 1,\r\n            columns: 3\r\n        }\r\n    ];\r\n\r\n    // Grid template\r\n    const template = (new GridRandomTemplate(elementsToDisplay)).gridTemplateAreas;\r\n\r\n    // List of values that will be updated\r\n    const setValues = useRef([\r\n        {\r\n            property: '--bg',\r\n            value: colorScheme.current.bgColor\r\n        },\r\n        {\r\n            property: '--txt',\r\n            value: colorScheme.current.accent3\r\n        },\r\n        {\r\n            property: '--clr-difference',\r\n            value: colorScheme.current.accent1\r\n        },\r\n        {\r\n            property: '--contrast',\r\n            value: 'screen'\r\n        },\r\n        {\r\n            property: 'grid-template-areas',\r\n            value: template\r\n        }\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        const firstContrast = (new ContrastRatio(colorScheme.current.bgColor, colorScheme.current.accent3)).ratio;\r\n        const secondContrast = (new ContrastRatio(colorScheme.current.bgColor, colorScheme.current.accent1)).ratio;\r\n\r\n        if (\r\n            firstContrast < 1.9 &&\r\n            secondContrast < 1.9 &&\r\n            (Math.max(firstContrast, secondContrast) - Math.min(firstContrast, secondContrast) < 0.42))\r\n        {\r\n            setValues.current[3].value = 'exclusion';\r\n        } else if (firstContrast >= 4 || secondContrast >= 4) {\r\n            setValues.current[3].value = 'screen';\r\n        } else {\r\n            setValues.current[3].value = 'color-dodge';\r\n        }\r\n\r\n        setValues.current.forEach((element) => {\r\n            sectionRef.current.style.setProperty(element.property, element.value);\r\n        });\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <section ref={sectionRef} className={\"section\"}>\r\n                <Nav />\r\n\r\n                <Title content={\"AESTHETICS\"} className={\"section-text__1\"} />\r\n                <Title content={\"ENERGY\"} className={\"section-text__2\"} />\r\n                <Title content={\"AMBITION\"} className={\"section-text__3\"} />\r\n\r\n                <Figure imageInfo={imageInfo.current} className={\"figure-img\"} />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { useState, useRef, useEffect } from 'react';\r\nimport Section from '../Section/Section';\r\n\r\nlet pages = [<Section key={0} />, <Section key={1} />, <Section key={2} />];\r\n\r\nconst Main = () => {\r\n    const [display, setDisplay] = useState(false);\r\n\r\n    let keyRef = useRef(3);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', () => {\r\n            const {\r\n                scrollTop,\r\n                scrollHeight,\r\n                clientHeight\r\n            } = document.documentElement;\r\n\r\n            if (scrollTop + clientHeight >= (scrollHeight - 5) / 1.15)\r\n                setDisplay(true);\r\n        })\r\n    }, []);\r\n\r\n    if (display) {\r\n        pages.push(<Section key={keyRef.current} />);\r\n        keyRef.current++;\r\n        setDisplay(false)\r\n    }\r\n\r\n    return (\r\n        <main id={\"main\"}>\r\n            {pages.map(section => section)}\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main;","import { Header, Main } from '../../components';\r\n\r\nfunction Home() {\r\n    return (\r\n        <>\r\n            <Header />\r\n            <Main />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","import { Home } from './pages';\r\n\r\nfunction App() {\r\n    return (\r\n        <>\r\n            <Home />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style/style.css';\r\nimport App from './App';\r\nimport reportWebVitals from './utils/helpers/default/reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}